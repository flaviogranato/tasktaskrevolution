stages:
  - test
  - build
  - release

variables:
  CARGO_HOME: "${CI_PROJECT_DIR}/.cargo"
  RUSTFLAGS: "-Dwarnings"

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .cargo/
    - target/

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^feature\/.*$/ || $CI_COMMIT_BRANCH == "develop"
      when: always
    - if: $CI_COMMIT_BRANCH =~ /^release\/.*$/ || $CI_COMMIT_BRANCH == "master"
      when: always
    - when: never

test:
  stage: test
  image: rust:latest
  script:
    - cargo test --verbose
    - rustup component add clippy
    - cargo clippy -- -D warnings
    - rustup component add rustfmt
    - cargo fmt -- --check

build:
  stage: build
  image: rust:latest
  rules:
    - if: $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH =~ /^release\/.*$/
      when: always
  script:
    - apt-get update && apt-get install -y zstd
    - cargo build --release
    - zstd -19 --ultra target/release/${CI_PROJECT_NAME} -o ${CI_PROJECT_NAME}.zst
  artifacts:
    paths:
      - ${CI_PROJECT_NAME}.zst

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_TAG != null
      when: always
  script:
    - echo "Lançando versão ${CI_COMMIT_TAG}"
  release:
    tag_name: $CI_COMMIT_TAG
    description: "Release ${CI_COMMIT_TAG}"
    assets:
      links:
        - name: "Binário Compactado"
          url: "${CI_JOB_URL}/artifacts/download"
          link_type: "other"
