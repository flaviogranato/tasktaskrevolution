#!/usr/bin/env fish

# üß™ Script de Teste Automatizado - TaskTaskRevolution
# Este script executa todos os comandos do tutorial para valida√ß√£o completa

set -x TEST_DIR "/tmp/ttr_tutorial_test_$(date +%s)"
set -x SITE_DIR "$TEST_DIR/site"

echo "üöÄ Iniciando Teste Automatizado do TaskTaskRevolution"
echo "üìÅ Diret√≥rio de teste: $TEST_DIR"
echo "üîß Usando TTR do PATH"
echo ""

# Verificar se o comando ttr est√° dispon√≠vel no PATH
if not command -v ttr >/dev/null 2>&1
    echo "‚ùå Erro: Comando 'ttr' n√£o encontrado no PATH"
    echo "üí° Execute: cargo install --force --path ."
    exit 1
end

echo "‚úÖ Comando 'ttr' encontrado no PATH"
echo ""

# Criar diret√≥rio de teste
echo "üìÅ Criando diret√≥rio de teste..."
mkdir -p "$TEST_DIR"
cd "$TEST_DIR"

echo "‚úÖ Diret√≥rio de teste criado: $TEST_DIR"
echo ""

# ============================================================================
# FASE 1: INICIALIZA√á√ÉO DO SISTEMA
# ============================================================================

echo "üöÄ FASE 1: Inicializa√ß√£o do Sistema"
echo "=================================="

echo "1.1 Inicializando o TTR..."
ttr init \
  --name "Usu√°rio Teste" \
  --email "teste@exemplo.com" \
  --company-name "Empresa Teste" \
  --timezone "America/Sao_Paulo" \
  --work-hours-start "09:00" \
  --work-hours-end "18:00" \
  --work-days "monday,tuesday,wednesday,thursday,friday"

if test $status -eq 0
    echo "‚úÖ Sistema inicializado com sucesso"
else
    echo "‚ùå Falha na inicializa√ß√£o do sistema"
    exit 1
end

echo "1.2 Verificando arquivos criados..."
ls -la
echo "üìÑ Conte√∫do do config.yaml:"
cat config.yaml
echo ""

# ============================================================================
# FASE 2: GERENCIAMENTO DE EMPRESAS
# ============================================================================

echo "üè¢ FASE 2: Gerenciamento de Empresas"
echo "===================================="

echo "2.1 Criando empresa TechCorp Solutions..."
ttr create company \
  --name "TechCorp Solutions" \
  --code "TECH-001" \
  --description "Empresa de tecnologia e solu√ß√µes inovadoras"

if test $status -eq 0
    echo "‚úÖ Empresa TechCorp criada com sucesso"
else
    echo "‚ùå Falha na cria√ß√£o da empresa TechCorp"
    exit 1
end

echo "2.2 Criando empresa Design Studio..."
ttr create company \
  --name "Design Studio" \
  --code "DESIGN-001" \
  --description "Est√∫dio de design e criatividade"

if test $status -eq 0
    echo "‚úÖ Empresa Design Studio criada com sucesso"
else
    echo "‚ùå Falha na cria√ß√£o da empresa Design Studio"
    exit 1
end

echo "2.3 Listando empresas..."
ttr list companies
echo ""

# ============================================================================
# FASE 3: GERENCIAMENTO DE RECURSOS
# ============================================================================

echo "üë• FASE 3: Gerenciamento de Recursos"
echo "===================================="

echo "3.1 Criando recurso Jo√£o Silva (Developer)..."
ttr create resource \
  --name "Jo√£o Silva" \
  --type "Developer" \
  --code "JS-001" \
  --company "TECH-001" \
  --description "Desenvolvedor Senior" \
  --email "joao@techcorp.com"

if test $status -eq 0
    echo "‚úÖ Recurso Jo√£o Silva criado com sucesso"
else
    echo "‚ùå Falha na cria√ß√£o do recurso Jo√£o Silva"
    exit 1
end

echo "3.2 Criando recurso Maria Santos (Product Owner)..."
ttr create resource \
  --name "Maria Santos" \
  --type "Product Owner" \
  --code "MS-001" \
  --company "TECH-001" \
  --description "Product Manager" \
  --email "maria@techcorp.com"

if test $status -eq 0
    echo "‚úÖ Recurso Maria Santos criado com sucesso"
else
    echo "‚ùå Falha na cria√ß√£o do recurso Maria Santos"
    exit 1
end

echo "3.3 Criando recurso Ana Costa (Designer)..."
ttr create resource \
  --name "Ana Costa" \
  --type "Designer" \
  --code "AC-001" \
  --company "DESIGN-001" \
  --description "Designer UX/UI" \
  --email "ana@designstudio.com"

if test $status -eq 0
    echo "‚úÖ Recurso Ana Costa criado com sucesso"
else
    echo "‚ùå Falha na cria√ß√£o do recurso Ana Costa"
    exit 1
end

echo "3.4 Testando valida√ß√£o de tipos de recursos (deve falhar)..."
ttr create resource \
  --name "Teste" \
  --type "TipoInvalido" \
  --code "TEST-001" \
  --company "TECH-001" \
  --email "teste@teste.com"

if test $status -ne 0
    echo "‚úÖ Valida√ß√£o de tipo inv√°lido funcionando corretamente"
else
    echo "‚ö†Ô∏è  Valida√ß√£o de tipo inv√°lido n√£o funcionou como esperado"
end

echo "3.5 Listando recursos..."
ttr list resources --company "TECH-001"
ttr list resources --company "DESIGN-001"
echo ""

# ============================================================================
# FASE 4: GERENCIAMENTO DE PROJETOS
# ============================================================================

echo "üìÅ FASE 4: Gerenciamento de Projetos"
echo "===================================="

echo "4.1 Criando projeto Sistema de E-commerce..."
ttr create project \
  --name "Sistema de E-commerce" \
  --code "ECOMM-001" \
  --company "TECH-001" \
  --description "Desenvolvimento de plataforma de e-commerce completa" \
  --start-date "2024-01-15" \
  --end-date "2024-06-30"

if test $status -eq 0
    echo "‚úÖ Projeto E-commerce criado com sucesso"
else
    echo "‚ùå Falha na cria√ß√£o do projeto E-commerce"
    exit 1
end

echo "4.2 Criando projeto App Mobile..."
ttr create project \
  --name "App Mobile" \
  --code "MOBILE-001" \
  --company "TECH-001" \
  --description "Aplicativo mobile para iOS e Android" \
  --start-date "2024-02-01" \
  --end-date "2024-08-31"

if test $status -eq 0
    echo "‚úÖ Projeto App Mobile criado com sucesso"
else
    echo "‚ùå Falha na cria√ß√£o do projeto App Mobile"
    exit 1
end

echo "4.3 Criando projeto Rebranding Corporativo..."
ttr create project \
  --name "Rebranding Corporativo" \
  --code "REBRAND-001" \
  --company "DESIGN-001" \
  --description "Projeto completo de rebranding e identidade visual" \
  --start-date "2024-01-01" \
  --end-date "2024-03-31"

if test $status -eq 0
    echo "‚úÖ Projeto Rebranding criado com sucesso"
else
    echo "‚ùå Falha na cria√ß√£o do projeto Rebranding"
    exit 1
end

echo "4.4 Listando projetos..."
ttr list projects --company "TECH-001"
ttr list projects --company "DESIGN-001"
echo ""

# ============================================================================
# FASE 5: GERENCIAMENTO DE TAREFAS
# ============================================================================

echo "‚úÖ FASE 5: Gerenciamento de Tarefas"
echo "==================================="

echo "5.1 Criando tarefa An√°lise de Requisitos..."
ttr create task \
  --name "An√°lise de Requisitos" \
  --code "TASK-001" \
  --project "ECOMM-001" \
  --company "TECH-001" \
  --start-date "2024-01-15" \
  --due-date "2024-01-30" \
  --assigned-resources "JS-001,MS-001"

if test $status -eq 0
    echo "‚úÖ Tarefa An√°lise de Requisitos criada com sucesso"
else
    echo "‚ùå Falha na cria√ß√£o da tarefa An√°lise de Requisitos"
    exit 1
end

echo "5.2 Criando tarefa Desenvolvimento Backend..."
ttr create task \
  --name "Desenvolvimento Backend" \
  --code "TASK-002" \
  --project "ECOMM-001" \
  --company "TECH-001" \
  --start-date "2024-02-01" \
  --due-date "2024-04-15" \
  --assigned-resources "JS-001"

if test $status -eq 0
    echo "‚úÖ Tarefa Desenvolvimento Backend criada com sucesso"
else
    echo "‚ùå Falha na cria√ß√£o da tarefa Desenvolvimento Backend"
    exit 1
end

echo "5.3 Criando tarefa Design de Interface..."
ttr create task \
  --name "Design de Interface" \
  --code "TASK-003" \
  --project "MOBILE-001" \
  --company "TECH-001" \
  --start-date "2024-02-01" \
  --due-date "2024-02-28" \
  --assigned-resources "MS-001"

if test $status -eq 0
    echo "‚úÖ Tarefa Design de Interface criada com sucesso"
else
    echo "‚ùå Falha na cria√ß√£o da tarefa Design de Interface"
    exit 1
end

echo "5.4 Listando tarefas..."
ttr list tasks --project "ECOMM-001" --company "TECH-001"
ttr list tasks --project "MOBILE-001" --company "TECH-001"
echo ""

# ============================================================================
# FASE 5.5: SISTEMA DE DEPEND√äNCIAS AUTOM√ÅTICAS
# ============================================================================

echo "üîó FASE 5.5: Sistema de Depend√™ncias Autom√°ticas"
echo "================================================"

echo "5.5.1 Criando tarefas com depend√™ncias..."
ttr create task \
  --name "An√°lise de Requisitos" \
  --code "TASK-ANALISE" \
  --project "ECOMM-001" \
  --company "TECH-001" \
  --start-date "2024-01-15" \
  --due-date "2024-01-30" \
  --assigned-resources "JS-001"

if test $status -eq 0
    echo "‚úÖ Tarefa predecessora criada com sucesso"
else
    echo "‚ùå Falha na cria√ß√£o da tarefa predecessora"
    exit 1
end

ttr create task \
  --name "Desenvolvimento Backend" \
  --code "TASK-BACKEND" \
  --project "ECOMM-001" \
  --company "TECH-001" \
  --start-date "2024-02-01" \
  --due-date "2024-04-15" \
  --assigned-resources "JS-001"

if test $status -eq 0
    echo "‚úÖ Tarefa dependente criada com sucesso"
else
    echo "‚ùå Falha na cria√ß√£o da tarefa dependente"
    exit 1
end

echo "5.5.2 Linkando tarefas (criando depend√™ncia)..."
ttr link tasks \
  --from "TASK-ANALISE" \
  --to "TASK-BACKEND" \
  --project "ECOMM-001" \
  --company "TECH-001"

if test $status -eq 0
    echo "‚úÖ Depend√™ncia criada com sucesso"
else
    echo "‚ùå Falha na cria√ß√£o da depend√™ncia"
    exit 1
end

echo "5.5.3 Testando c√°lculo autom√°tico de datas..."
ttr update task \
  --code "TASK-ANALISE" \
  --project "ECOMM-001" \
  --company "TECH-001" \
  --due-date "2024-02-05"

if test $status -eq 0
    echo "‚úÖ Data da tarefa predecessora atualizada com sucesso"
else
    echo "‚ùå Falha na atualiza√ß√£o da data da tarefa predecessora"
    exit 1
end

echo "5.5.4 Testando detec√ß√£o de depend√™ncias circulares (deve falhar)..."
ttr link tasks \
  --from "TASK-BACKEND" \
  --to "TASK-ANALISE" \
  --project "ECOMM-001" \
  --company "TECH-001"

if test $status -ne 0
    echo "‚úÖ Detec√ß√£o de depend√™ncia circular funcionando corretamente"
else
    echo "‚ö†Ô∏è  Detec√ß√£o de depend√™ncia circular n√£o funcionou como esperado"
end

echo "5.5.5 Verificando propaga√ß√£o de mudan√ßas..."
ttr list tasks --project "ECOMM-001" --company "TECH-001"
echo ""

# ============================================================================
# FASE 6: OPERA√á√ïES DE ATUALIZA√á√ÉO
# ============================================================================

echo "üîÑ FASE 6: Opera√ß√µes de Atualiza√ß√£o"
echo "==================================="

echo "6.1 Atualizando projeto..."
ttr update project \
  --code "ECOMM-001" \
  --company "TECH-001" \
  --name "Sistema E-commerce Premium" \
  --description "Plataforma de e-commerce com recursos avan√ßados"

if test $status -eq 0
    echo "‚úÖ Projeto atualizado com sucesso"
else
    echo "‚ùå Falha na atualiza√ß√£o do projeto"
    exit 1
end

echo "6.2 Atualizando tarefa..."
ttr update task \
  --code "TASK-001" \
  --project "ECOMM-001" \
  --company "TECH-001" \
  --name "An√°lise Detalhada de Requisitos" \
  --description "An√°lise completa incluindo UX/UI"

if test $status -eq 0
    echo "‚úÖ Tarefa atualizada com sucesso"
else
    echo "‚ùå Falha na atualiza√ß√£o da tarefa"
    exit 1
end

echo "6.3 Atualizando recurso..."
ttr update resource \
  --code "JS-001" \
  --company "TECH-001" \
  --name "Jo√£o Silva Santos" \
  --type "Tech Lead" \
  --email "joao.silva@techcorp.com" \
  --description "Tech Lead Senior"

if test $status -eq 0
    echo "‚úÖ Recurso atualizado com sucesso"
else
    echo "‚ùå Falha na atualiza√ß√£o do recurso"
    exit 1
end

echo "6.4 Verificando atualiza√ß√µes..."
ttr list projects --company "TECH-001"
ttr list tasks --project "ECOMM-001" --company "TECH-001"
ttr list resources --company "TECH-001"
echo ""

# ============================================================================
# FASE 7: OPERA√á√ïES DE EXCLUS√ÉO
# ============================================================================

echo "üóëÔ∏è FASE 7: Opera√ß√µes de Exclus√£o"
echo "================================"

echo "7.1 Deletando tarefa..."
ttr delete task \
  --code "TASK-003" \
  --project "MOBILE-001" \
  --company "TECH-001"

if test $status -eq 0
    echo "‚úÖ Tarefa deletada com sucesso"
else
    echo "‚ùå Falha na exclus√£o da tarefa"
    exit 1
end

echo "7.2 Deletando projeto..."
ttr delete project \
  --code "MOBILE-001" \
  --company "TECH-001"

if test $status -eq 0
    echo "‚úÖ Projeto deletado com sucesso"
else
    echo "‚ùå Falha na exclus√£o do projeto"
    exit 1
end

echo "7.3 Deletando recurso..."
ttr delete resource \
  --code "MS-001" \
  --company "TECH-001"

if test $status -eq 0
    echo "‚úÖ Recurso deletado com sucesso"
else
    echo "‚ùå Falha na exclus√£o do recurso"
    exit 1
end

echo "7.4 Verificando exclus√µes..."
ttr list projects --company "TECH-001"
ttr list tasks --project "ECOMM-001" --company "TECH-001"
ttr list resources --company "TECH-001"
echo ""

# ============================================================================
# FASE 8: GERA√á√ÉO DE SITE EST√ÅTICO
# ============================================================================

echo "üèóÔ∏è FASE 8: Gera√ß√£o de Site Est√°tico"
echo "==================================="

echo "8.1 Build do site..."
ttr build --output "site" --base-url "https://meusite.com"

if test $status -eq 0
    echo "‚úÖ Site est√°tico gerado com sucesso"
else
    echo "‚ùå Falha na gera√ß√£o do site est√°tico"
    exit 1
end

echo "8.2 Verificando arquivos gerados..."
ls -la site/
ls -la site/companies/
echo ""

# ============================================================================
# FASE 8.5: GERA√á√ÉO DE GR√ÅFICOS GANTT
# ============================================================================

echo "üìä FASE 8.5: Gera√ß√£o de Gr√°ficos Gantt"
echo "======================================"

echo "8.5.1 Verificando gr√°ficos Gantt gerados..."
ls -la site/companies/*/gantt.html
ls -la site/companies/*/projects/*/gantt.html
echo ""

# ============================================================================
# FASE 9: VALIDA√á√ÉO DO SISTEMA
# ============================================================================

echo "üîç FASE 9: Valida√ß√£o do Sistema"
echo "==============================="

echo "9.1 Validando regras de neg√≥cio..."
ttr validate business-rules

echo "9.2 Validando integridade dos dados..."
ttr validate data-integrity

echo "9.3 Validando entidades..."
ttr validate entities

echo "9.4 Validando sistema completo..."
ttr validate system
echo ""

# ============================================================================
# FASE 10: TESTES DE CONTEXTO
# ============================================================================

echo "üß™ FASE 10: Testes de Contexto"
echo "=============================="

echo "10.1 Testando contexto de empresa..."
cd companies/TECH-001
ttr list projects
ttr create project --name "Projeto Local" --code "LOCAL-001" --start-date "2024-03-01" --end-date "2024-05-31"
cd ../..

echo "10.2 Testando contexto de projeto..."
cd companies/TECH-001/projects/ECOMM-001
ttr list tasks
ttr create task --name "Tarefa Local" --code "TASK-LOCAL" --start-date "2024-03-01" --due-date "2024-03-15"
cd ../../..
echo ""

# ============================================================================
# FASE 11: TESTES DE RELAT√ìRIOS
# ============================================================================

echo "üìä FASE 11: Testes de Relat√≥rios"
echo "==============================="

echo "11.1 Gerando relat√≥rio de tarefas..."
ttr report task --project "ECOMM-001" --company "TECH-001"

echo "11.2 Gerando relat√≥rio de f√©rias..."
ttr report vacation --company "TECH-001"
echo ""

# ============================================================================
# FASE 12: TESTES DE LINKS
# ============================================================================

echo "üîó FASE 12: Testes de Links"
echo "==========================="

echo "12.1 Linkando tarefas..."
ttr link tasks --from "TASK-001" --to "TASK-002" --project "ECOMM-001" --company "TECH-001"

echo "12.2 Deslinkando tarefas..."
ttr unlink tasks --from "TASK-001" --to "TASK-002" --project "ECOMM-001" --company "TECH-001"
echo ""

# ============================================================================
# RESUMO FINAL
# ============================================================================

echo "üéâ RESUMO FINAL"
echo "==============="
echo "‚úÖ Todos os testes foram executados com sucesso!"
echo ""
echo "üìä Funcionalidades Validadas:"
echo "  - ‚úÖ Inicializa√ß√£o do sistema"
echo "  - ‚úÖ Cria√ß√£o de empresas"
echo "  - ‚úÖ Cria√ß√£o de recursos com valida√ß√£o de tipos"
echo "  - ‚úÖ Cria√ß√£o de projetos"
echo "  - ‚úÖ Cria√ß√£o de tarefas"
echo "  - ‚úÖ Sistema de depend√™ncias autom√°ticas"
echo "  - ‚úÖ Valida√ß√£o de tipos de recursos"
echo "  - ‚úÖ C√°lculo autom√°tico de datas"
echo "  - ‚úÖ Detec√ß√£o de depend√™ncias circulares"
echo "  - ‚úÖ Propaga√ß√£o de mudan√ßas"
echo "  - ‚úÖ Opera√ß√µes de atualiza√ß√£o"
echo "  - ‚úÖ Opera√ß√µes de exclus√£o"
echo "  - ‚úÖ Gera√ß√£o de site est√°tico"
echo "  - ‚úÖ Gera√ß√£o de gr√°ficos Gantt"
echo "  - ‚úÖ Valida√ß√£o do sistema"
echo "  - ‚úÖ Trabalho com contextos"
echo "  - ‚úÖ Gera√ß√£o de relat√≥rios"
echo "  - ‚úÖ Opera√ß√µes de link/unlink"
echo ""
echo "üìÅ Arquivos gerados em: $TEST_DIR"
echo "üåê Site est√°tico em: $SITE_DIR"
echo ""
echo "üßπ Limpeza do diret√≥rio tempor√°rio..."
echo "üí° Para manter os arquivos de teste, copie de: $TEST_DIR"
echo "üóëÔ∏è  Para limpar automaticamente, pressione Enter ou aguarde 10 segundos..."
echo ""

# Aguardar 10 segundos ou entrada do usu√°rio
read -t 10 -P "Pressione Enter para limpar ou aguarde 10 segundos... " || true

# Limpar diret√≥rio tempor√°rio
if test -d "$TEST_DIR"
    echo "üßπ Removendo diret√≥rio tempor√°rio: $TEST_DIR"
    rm -rf "$TEST_DIR"
    echo "‚úÖ Diret√≥rio tempor√°rio removido com sucesso"
else
    echo "‚ÑπÔ∏è  Diret√≥rio tempor√°rio j√° foi removido"
end

echo ""
echo "üöÄ TaskTaskRevolution est√° funcionando perfeitamente!"
echo "üéØ Todas as funcionalidades implementadas foram validadas com sucesso!"
